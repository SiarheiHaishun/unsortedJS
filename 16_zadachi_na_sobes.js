'use strict';

let x = 5; 
console.log(x++)//5
console.log(++x)//7
console.log(x++)//7
console.log(x++)//8



//•	Чему равно такое выражение: [ ] + false - null + true ?
console.log([] + false);//"false"
console.log(typeof([] + false));//string
// когда выполняются такие операции с пустым массивом, он приводится к строке
console.log([] + false - null);//NaN
// такой результат получается при произведении не математических выражений
console.log([] + false - null + true);//NaN
console.log(typeof([] + false - null + true));//number

// Ответ на задачу: NaN


//•	Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?

let y = 1; let z = y = 2; // число примитивный тип данных, передается по значению, выполняется справо налево, сначала
//y присваеватся 2, потом z присваевается значение y
console.log(z)//2


// •	Чему равна сумма [ ] + 1 + 2?

console.log([ ] + 1 + 2);//12
console.log(typeof([ ] + 1 + 2));//string


//•	Что выведет этот код: alert( "1"[0] )?

console.log("1"[0]);//1
console.log(typeof("1"[0]));//string


//•	Чему равно 2 && 1 && null && 0 && undefined ?

console.log(2 && 1 && null && 0 && undefined);//null  'И' запинается на лжи
// на null как будто сработал оператор return и он вернул последнее значение, то есть null




// •	Есть ли разница между выражениями? !!( a && b ) и (a && b)?

console.log(!!( 1 && 2 ) === (1 && 2));//false
// Два !! превращают значение в Boolean

console.log((1 && 2))//2





// •	Что выведет этот код: alert( null || 2 && 3 || 4 ); ?

// В таблице приоритетов И выполняется первее, чем или

console.log(( null || 2 && 3 || 4 ));//3
// При логическом сравнении && оба аргумента равны, будет возвращаться последнее значение
// Оператор ИЛИ запинается на правде





// •	a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
const a = [1, 2, 3], 
b = [1, 2, 3];
console.log(a===b);//false
// Массивы не равны, потому что сраниваются не содержимое массивов, а ящики - хранилища массивов а и б, 
//а это разные сущности



// •	Что выведет этот код: alert( +"Infinity" ); ?
console.log(( +"Infinity" ));//Infinity тип данных number


// •	Верно ли сравнение: "Ёжик" > "яблоко"?
console.log("Ёжик" > "яблоко")//false



// •	Чему равно 0 || "" || 2 || undefined || true || falsе ?
console.log(0 || "" || 2 || undefined || true || falsе );//2
// ИЛИ запинается на правде, потому вернется 2


